import telebot
import nero_modle as ai
import time
from telebot import types
API_TOKEN = '7346294707:AAF3CdvR_R7pv2TcLuABsywQrbronwQWqoQ'
bot = telebot.TeleBot(API_TOKEN)

user_data = {}
 def create_player_roles(num_players, player_names):
    roles = ['–í–æ–∏–Ω', '–ú–∞–≥', '–ö–ª–µ—Ä–∏–∫', '–†–∞–∑–±–æ–π–Ω–∏–∫', '–ë–∞—Ä–¥', '–ü–∞–ª–∞–¥–∏–Ω', '–î—Ä—É–∏–¥', '–í–∞—Ä–≤–∞—Ä', '–ü–ª—É—Ç', '–ú–æ–Ω–∞—Ö']
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–æ–ª—è—Ö –∏–≥—Ä–æ–∫–æ–≤
    player_roles = {}
        
    # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ª–æ–≤–∞—Ä—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–æ–ª—è—Ö
    for i in range(num_players):
        player_roles[player_names[i]] = f"{player_names[i]} —ç—Ç–æ {random.choice(roles)}"
        
    return player_roles
        
@bot.message_handler(commands=['start'])
def start(message):
    user_data[message.chat.id] = {'count': 0, 'names': []}
    video_file = open('1723633841534.mp4', 'rb')
    bot.send_video(message.chat.id, video=video_file)
    bot.send_message(message.chat.id, '''–í –¥–∞–ª—ë–∫–æ–º –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–µ, –≥–¥–µ –º–∞–≥–∏—è –∏ —á—É–¥–µ—Å–∞ —è–≤–ª—è—é—Ç—Å—è –æ–±—ã–¥–µ–Ω–Ω–æ—Å—Ç—å—é, –∞ –¥—Ä–∞–∫–æ–Ω—ã –∏ –ø–æ–¥–∑–µ–º–µ–ª—å—è ‚Äì —á–∞—Å—Ç—å—é –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–π –∂–∏–∑–Ω–∏, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –≥–ª–∞–≤–∞ –≤ –∏—Å—Ç–æ—Ä–∏–∏ –≥–µ—Ä–æ–µ–≤. –í —ç—Ç–æ–º –º–∏—Ä–µ, –ø–æ–ª–Ω–æ–º –æ–ø–∞—Å–Ω–æ—Å—Ç–µ–π –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π, –≤—ã ‚Äì –≥—Ä—É–ø–ø–∞ –æ—Ç–≤–∞–∂–Ω—ã—Ö –∏—Å–∫–∞—Ç–µ–ª–µ–π –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π, –≥–æ—Ç–æ–≤—ã—Ö –±—Ä–æ—Å–∏—Ç—å –≤—ã–∑–æ–≤ —Ç—å–º–µ –∏ –∑–∞—â–∏—Ç–∏—Ç—å –Ω–µ–≤–∏–Ω–Ω—ã—Ö –æ—Ç –∑–ª–∞.
–í–∞—à–∞ –º–∏—Å—Å–∏—è ‚Äì –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –¥—Ä–µ–≤–Ω–∏–µ –ø–æ–¥–∑–µ–º–µ–ª—å—è, –ø–æ–ª–Ω—ã–µ –ª–æ–≤—É—à–µ–∫, –º–æ–Ω—Å—Ç—Ä–æ–≤ –∏ —Å–æ–∫—Ä–æ–≤–∏—â, –∏ —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–∞–π–Ω—ã, —Å–∫—Ä—ã—Ç—ã–µ –∑–∞ –∏—Ö —Å—Ç–µ–Ω–∞–º–∏. –í—ã —Å—Ç–æ–ª–∫–Ω—ë—Ç–µ—Å—å —Å –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –¥—Ä–∞–∫–æ–Ω–∞–º–∏, –æ—Ö—Ä–∞–Ω—è—é—â–∏–º–∏ —Å–≤–æ–∏ —Å–æ–∫—Ä–æ–≤–∏—â–∞, –∏ –¥—Ä—É–≥–∏–º–∏ –æ–ø–∞—Å–Ω–æ—Å—Ç—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥—Å—Ç–µ—Ä–µ–≥–∞—é—Ç –≤–∞—Å –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥—É.
–ù–æ –Ω–µ —Ç–æ–ª—å–∫–æ –æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∂–¥—É—Ç –≤–∞—Å –≤ —ç—Ç–æ–º –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–∏. –í—ã –Ω–∞–π–¥—ë—Ç–µ –≤–µ—Ä–Ω—ã—Ö —Å–æ—é–∑–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –≤ –±–æ—Ä—å–±–µ —Å –∑–ª–æ–º, –∏ —É–∑–Ω–∞–µ—Ç–µ –æ —Å–µ–±–µ –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ. –í–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è –∏ –¥–µ–π—Å—Ç–≤–∏—è –±—É–¥—É—Ç –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –∏—Å—Ö–æ–¥ —ç—Ç–æ–π —ç–ø–∏—á–µ—Å–∫–æ–π –±–∏—Ç–≤—ã –º–µ–∂–¥—É –¥–æ–±—Ä–æ–º –∏ –∑–ª–æ–º.
–ü–æ—Ä–∞ –Ω–∞—á–∏–Ω–∞—Ç—å! –°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å? (–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 2 –¥–æ 4)''', reply_markup=types.ReplyKeyboardRemove())

@bot.message_handler(func=lambda message: message.chat.id in user_data and user_data[message.chat.id]['count'] == 0)
def ask_count(message):
    try:
        count = int(message.text)
        if 2 <= count <= 4:
            user_data[message.chat.id]['count'] = count
            bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ {count} —á–µ–ª–æ–≤–µ–∫, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:")
        else:
            bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 2 –¥–æ 4.")
    except ValueError:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")

@bot.message_handler(commands=['fix'])
def ask_count(message):
    user_data[message.chat.id]['count'] = count
    bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ {count} —á–µ–ª–æ–≤–µ–∫, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:")


@bot.message_handler(func=lambda message: message.chat.id in user_data and 0 < user_data[message.chat.id]['count'] <= 4)
def ask_names(message):
    names = message.text.split()
    if len(names) == user_data[message.chat.id]['count']:
        user_data[message.chat.id]['names'] = names
        bot.send_message(message.chat.id, f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫: {user_data[message.chat.id]['count']}")
        bot.send_message(message.chat.id, "–ò–º–µ–Ω–∞: " + ", ".join(names))
        keyboard = types.InlineKeyboardMarkup()
        key_go = types.                InlineKeyboardButton(text='–ü–æ–µ—Ö–∞–ª–∏ üîÆ', callback_data='go')
# –ò –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω
        keyboard.add(key_go)
        bot.send_message(message.chat.id, f"–ü–æ–µ—Ö–∞–ª–∏? –ï—Å–ª–∏ –∑–∞–∫—Ä–∞–ª–∞—Å—å –æ—à–∏–±–∫–∞ –ø—Ä–∏–¥—ë—Ç—Å—è –Ω–∞–∂–∞—Ç—å /start", reply_markup=keyboard)        
        del user_data[message.chat.id]
    else:
        bot.send_message(message.chat.id, f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ {user_data[message.chat.id]['count']} –∏–º–µ–Ω. –ß–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")

@bot.callback_query_handler(func=lambda call: call.data == 'go')
def save_btn(call):
    message = call.message
    chat_id = message.chat.id
    message_id = message.message_id  
    bot.edit_message_text(chat_id=chat_id, message_id=message_id, text='–ú–Ω–µ –Ω–∞–¥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. –ò—Å—Ç–æ—Ä–∏—è –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –∞–≤—Ç–æ–º–æ—Ç–∏—á–µ—Å–∫–∏ –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å –Ω–µ –Ω–µ–¥–æ. –ú–∞–≥–∏—è —Å–∫–æ—Ä–æ –ø—Ä–æ–∏–∑–∞–π–¥—ë—Ç')  
    bot.send_message(message.chat.id, f"‚åõÔ∏è")
 

    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏

    player_roles = create_player_roles(user_data[message.chat.id]['count'], user_data[message.chat.id]['names'])
    user_data[message.chat.id]['roles'] = player_roles
    message_text = ai.giga_get("–ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–æ–º—Ç?")
    context_text = message_text
    bot.send_message(message.chat.id, message_text)
    bot.send_message(message.chat.id, player_roles)

bot.polling()
